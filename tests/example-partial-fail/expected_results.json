{
  "version": 1,
  "status": "fail",
  "message": "1/9 test.year not divisible by 4 in common year... OK\n2/9 test.year divisible by 2, not divisible by 4 in common year... OK\n3/9 test.year divisible by 4, not divisible by 100 in leap year... OK\n4/9 test.year divisible by 4 and 5 is still a leap year... OK\n5/9 test.year divisible by 100, not divisible by 400 in common year... FAIL (TestUnexpectedResult)\n/opt/zig/lib/std/testing.zig:515:14: 0x2246af in expect (test)\n    if (!ok) return error.TestUnexpectedResult;\n             ^\n/tmp/exercism-zig-test-runner/example-partial-fail/test_example_partial_fail.zig:23:5: 0x224986 in test.year divisible by 100, not divisible by 400 in common year (test)\n    try testing.expect(!leap.leap(2100));\n    ^\n6/9 test.year divisible by 100 but not by 3 is still not a leap year... FAIL (TestUnexpectedResult)\n/opt/zig/lib/std/testing.zig:515:14: 0x2246af in expect (test)\n    if (!ok) return error.TestUnexpectedResult;\n             ^\n/tmp/exercism-zig-test-runner/example-partial-fail/test_example_partial_fail.zig:27:5: 0x2249d6 in test.year divisible by 100 but not by 3 is still not a leap year (test)\n    try testing.expect(!leap.leap(1900));\n    ^\n7/9 test.year divisible by 400 is leap year... OK\n8/9 test.year divisible by 400 but not by 125 is still a leap year... OK\n9/9 test.year divisible by 200, not divisible by 400 in common year... FAIL (TestUnexpectedResult)\n/opt/zig/lib/std/testing.zig:515:14: 0x2246af in expect (test)\n    if (!ok) return error.TestUnexpectedResult;\n             ^\n/tmp/exercism-zig-test-runner/example-partial-fail/test_example_partial_fail.zig:39:5: 0x224ac6 in test.year divisible by 200, not divisible by 400 in common year (test)\n    try testing.expect(!leap.leap(1800));\n    ^\n6 passed; 0 skipped; 3 failed."
}
